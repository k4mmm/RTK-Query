{"version":3,"sources":["Components/Filter/Filter.styled.jsx","Components/Filter/Filter.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","App.styled.jsx","App.jsx","index.js"],"names":["FilterInput","styled","input","Label","label","Filter","filter","change","type","value","onChange","name","placeholder","Form","form","Input","ButtonAdd","button","ContactForm","submit","useState","setName","number","setNumber","inputChange","e","currentTarget","onSubmit","preventDefault","id","uuidv4","pattern","title","required","ContactItem","li","ButtonDelete","List","ol","ContactList","deleteContact","visibleContacts","map","contact","onClick","PhonebookSection","div","MainTitle","h1","Title","h2","App","JSON","parse","localStorage","getItem","contacts","setContacts","setFilter","useEffect","setItem","stringify","data","find","alert","ps","normalizedFilter","toLowerCase","item","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAEaA,EAAcC,IAAOC,MAAV,iDAIXC,EAAQF,IAAOG,MAAV,iH,OCFLC,EAAS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC/B,OACE,eAACJ,EAAD,kCAEE,cAACH,EAAD,CACEQ,KAAK,OACLC,MAAOH,EACPI,SAAUH,EACVI,KAAK,SACLC,YAAY,2B,QCXPC,EAAOZ,IAAOa,KAAV,uIAQJX,EAAQF,IAAOG,MAAV,gGAMLW,EAAQd,IAAOC,MAAV,kDAILc,EAAYf,IAAOgB,OAAV,wTCfTC,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5B,EAAwBC,mBAAS,IAAjC,mBAAOT,EAAP,KAAaU,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOE,EAAP,KAAeC,EAAf,KAOMC,EAAc,SAACC,GACnB,MAAwBA,EAAEC,cAAlBf,EAAR,EAAQA,KAAMF,EAAd,EAAcA,MACd,OAAQE,GACN,IAAK,OACHU,EAAQZ,GACR,MACF,IAAK,SACHc,EAAUd,GACV,MACF,QACE,SAgBN,OACE,eAACI,EAAD,CAAMc,SAbW,SAACF,GAClBA,EAAEG,iBACF,IAAIC,EAAKC,cAMTX,EALoB,CAClBR,OACAkB,KACAP,WAxBFD,EAAQ,IACRE,EAAU,KA8BV,UACE,eAAC,EAAD,mBAEE,cAACR,EAAD,CACEP,KAAK,OACLG,KAAK,OACLD,SAAUc,EACVf,MAAOE,EACPC,YAAY,mBACZmB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,eAAC,EAAD,kBAEE,cAAClB,EAAD,CACEP,KAAK,MACLG,KAAK,SACLF,MAAOa,EACPV,YAAY,qBACZF,SAAUc,EACVO,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,OAGZ,cAACjB,EAAD,CAAWR,KAAK,SAAhB,6BClEO0B,EAAcjC,IAAOkC,GAAV,0BAEXC,EAAenC,IAAOgB,OAAV,gRAaZoB,EAAOpC,IAAOqC,GAAV,0BCdJC,EAAc,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,cAAeC,EAAsB,EAAtBA,gBAC3C,OACE,cAACJ,EAAD,UACGI,EAAgBC,KAAI,SAACC,GACpB,OACE,eAACT,EAAD,WACGS,EAAQhC,KADX,MACoBgC,EAAQrB,OAC1B,cAACc,EAAD,CACE5B,KAAK,SACLoC,QAAS,WACPJ,EAAcG,IAHlB,sBAFgBA,EAAQd,UCNvBgB,EAAmB5C,IAAO6C,IAAV,kDAGhBC,EAAY9C,IAAO+C,GAAV,8EAITC,EAAQhD,IAAOiD,GAAV,8ECHLC,EAAM,WACjB,MAAgC/B,oBAAS,WAAO,IAAD,EAC7C,iBAAOgC,KAAKC,MAAMC,aAAaC,QAAQ,oBAAvC,QAAuD,MADzD,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAA4BrC,mBAAS,IAArC,mBAAOd,EAAP,KAAeoD,EAAf,KAEAC,qBAAU,WACRL,aAAaM,QAAQ,WAAYR,KAAKS,UAAUL,MAC/C,CAACA,IAyBJ,OACE,eAACX,EAAD,WACE,cAACE,EAAD,wBACA,cAAC,EAAD,CAAa5B,OAtBE,SAAC2C,GACEN,EAASO,MAAK,SAACpB,GACjC,OAAOA,EAAQhC,OAASmD,EAAKnD,QAI3BqD,MAAM,GAAD,OAAIF,EAAKnD,KAAT,2BADL8C,GAAY,SAACQ,GAAD,OAASH,GAAT,mBAAkBG,UAkBhC,cAAChB,EAAD,uBACA,cAAC,EAAD,CAAQ3C,OAAQA,EAAQC,OAhBP,SAACkB,GACpBiC,EAAUjC,EAAEC,cAAcjB,UAgBxB,cAAC,EAAD,CACE+B,cA9BgB,SAACsB,GACrBL,EAAYD,EAASlD,QAAO,SAACqC,GAAD,OAAaA,EAAQd,KAAOiC,EAAKjC,QA8BzDY,gBAfkB,WACtB,IAAMyB,EAAmB5D,EAAO6D,cAChC,OAAOX,EAASlD,QAAO,SAAC8D,GAAD,OACrBA,EAAKzD,KAAKwD,cAAcE,SAASH,MAYdzB,SC1CzB6B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6d47f85c.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const FilterInput = styled.input`\n  margin-top: 10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  width: 300px;\n`;\n","import PropTypes from \"prop-types\";\n\nimport { FilterInput, Label } from \"./Filter.styled\";\n\nexport const Filter = ({ filter, change }) => {\n  return (\n    <Label>\n      Find contact by name\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={change}\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n      />\n    </Label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  change: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  height: auto;\n  border: 1px solid black;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n`;\n\nexport const Input = styled.input`\n  margin: 10px 20px;\n`;\n\nexport const ButtonAdd = styled.button`\n  margin-bottom: 10px;\n  width: 50%;\n  align-self: center;\n  background-color: #46ec8b;\n  border: 1px solid #46ec8b;\n  border-radius: 5px;\n  &:hover,\n  &:active {\n    background-color: #7171bd;\n    border: 1px solid black;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport PropTypes from \"prop-types\";\nimport { Form, Input, Label, ButtonAdd } from \"./ContactForm.styled\";\n\nexport const ContactForm = ({ submit }) => {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const inputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addContact = (e) => {\n    e.preventDefault();\n    let id = uuidv4();\n    const contactData = {\n      name,\n      id,\n      number,\n    };\n    submit(contactData);\n    reset();\n  };\n\n  return (\n    <Form onSubmit={addContact}>\n      <Label>\n        Name:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={inputChange}\n          value={name}\n          placeholder=\"New contact name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Tel:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"New contact number\"\n          onChange={inputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  Submit: PropTypes.func,\n};\n","import styled from \"@emotion/styled\";\n\nexport const ContactItem = styled.li``;\n\nexport const ButtonDelete = styled.button`\n  background-color: #46ec8b;\n  border: 1px solid #46ec8b;\n  border-radius: 5px;\n  margin-left: 10px;\n  &:hover,\n  &:active {\n    background-color: #7171bd;\n    border: 1px solid black;\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n  }\n`;\n\nexport const List = styled.ol``;\n","import PropTypes from \"prop-types\";\nimport { ButtonDelete, ContactItem, List } from \"./ContactList.styled\";\n\nexport const ContactList = ({ deleteContact, visibleContacts }) => {\n  return (\n    <List>\n      {visibleContacts.map((contact) => {\n        return (\n          <ContactItem key={contact.id}>\n            {contact.name} : {contact.number}\n            <ButtonDelete\n              type=\"submit\"\n              onClick={() => {\n                deleteContact(contact);\n              }}\n            >\n              Delete\n            </ButtonDelete>\n          </ContactItem>\n        );\n      })}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    })\n  ),\n  deleteContact: PropTypes.func.isRequired,\n};\n","import styled from \"@emotion/styled\";\n\nexport const PhonebookSection = styled.div`\n  margin-left: 20px;\n`;\nexport const MainTitle = styled.h1`\n  text-transform: uppercase;\n  font-size: 24px;\n`;\nexport const Title = styled.h2`\n  text-transform: uppercase;\n  font-size: 18px;\n`;\n","import { useState, useEffect } from \"react\";\nimport { Filter } from \"./Components/Filter/Filter\";\nimport { ContactForm } from \"./Components/ContactForm/ContactForm\";\nimport { ContactList } from \"./Components/ContactList/ContactList\";\nimport { MainTitle, Title, PhonebookSection } from \"./App.styled\";\n\nexport const App = () => {\n  const [contacts, setContacts] = useState(() => {\n    return JSON.parse(localStorage.getItem(\"contacts\")) ?? [];\n  });\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  const deleteContact = (data) => {\n    setContacts(contacts.filter((contact) => contact.id !== data.id));\n  };\n\n  const addContact = (data) => {\n    const findContact = contacts.find((contact) => {\n      return contact.name === data.name;\n    });\n    !findContact\n      ? setContacts((ps) => [data, ...ps])\n      : alert(`${data.name} is already in contact`);\n  };\n  const filterChange = (e) => {\n    setFilter(e.currentTarget.value);\n  };\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((item) =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <PhonebookSection>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm submit={addContact} />\n      <Title>Contacts</Title>\n      <Filter filter={filter} change={filterChange} />\n      <ContactList\n        deleteContact={deleteContact}\n        visibleContacts={visibleContacts()}\n      />\n    </PhonebookSection>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}