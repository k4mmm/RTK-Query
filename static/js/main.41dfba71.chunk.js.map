{"version":3,"sources":["Redux/filterSlice.js","Components/Filter/Filter.styled.jsx","Redux/selectors.js","Components/Filter/Filter.jsx","Components/ContactForm/ContactForm.styled.jsx","Redux/contactsApi.js","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","App.styled.jsx","App.jsx","Redux/store.js","index.js"],"names":["counterSlice","createSlice","name","initialState","reducers","filter","_","payload","actions","FilterInput","styled","input","Label","label","getFilter","state","Filter","dispatch","useDispatch","useSelector","type","value","onChange","e","filterAction","target","placeholder","Form","form","Input","ButtonAdd","button","contactsApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","fetchContacts","query","providesTags","deleteContact","mutation","id","url","method","invalidatesTags","addContact","newContact","body","useFetchContactsQuery","useDeleteContactMutation","useAddContactMutation","ContactForm","useState","setName","number","setNumber","addCon","prevContacts","data","inputChange","currentTarget","onSubmit","preventDefault","contactData","find","contact","alert","pattern","title","required","ContactItem","li","ButtonDelete","List","ol","ContactList","isFetching","isError","normalizedFilter","toLowerCase","item","includes","visibleContacts","map","onClick","PhonebookSection","div","MainTitle","h1","Title","h2","App","store","configureStore","reducer","middleware","getDefaultMiddleware","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41dfba71.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst counterSlice = createSlice({\n  name: \"filter\",\n  initialState: \"\",\n  reducers: {\n    filter: (_, { payload }) => payload,\n  },\n});\n\nexport const { filter } = counterSlice.actions;\nexport default counterSlice.reducer;\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FilterInput = styled.input`\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  width: 300px;\r\n`;\r\n","export const getFilter = (state) => state.filter;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { filter as filterAction } from \"../../Redux/filterSlice\";\nimport { FilterInput, Label } from \"./Filter.styled\";\nimport { getFilter } from \"../../Redux/selectors\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const filterChange = (e) => dispatch(filterAction(e.target.value));\n  return (\n    <Label>\n      Find contact by name\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={filterChange}\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n      />\n    </Label>\n  );\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n  height: auto;\r\n  border: 1px solid black;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin: 10px 20px;\r\n`;\r\n\r\nexport const ButtonAdd = styled.button`\r\n  margin-bottom: 10px;\r\n  width: 50%;\r\n  align-self: center;\r\n  background-color: #46ec8b;\r\n  border: 1px solid #46ec8b;\r\n  border-radius: 5px;\r\n  &:hover,\r\n  &:active {\r\n    background-color: #7171bd;\r\n    border: 1px solid black;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nexport const contactsApi = createApi({\n  reducerPath: \"contacts\",\n  baseQuery: fetchBaseQuery({\n    baseUrl: \"https://6167ee15ba841a001727c4d0.mockapi.io/api/v1\",\n  }),\n  tagTypes: [\"Contacts\"],\n  endpoints: (builder) => ({\n    fetchContacts: builder.query({\n      query: () => `/contacts`,\n      providesTags: [\"Contacts\"],\n    }),\n    deleteContact: builder.mutation({\n      query: (id) => ({ url: `/contacts/${id}`, method: \"DELETE\" }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n    addContact: builder.mutation({\n      query: (newContact) => ({\n        url: \"/contacts\",\n        method: \"POST\",\n        body: newContact,\n      }),\n      invalidatesTags: [\"Contacts\"],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useAddContactMutation,\n} = contactsApi;\n","import { useState } from \"react\";\nimport { Form, Input, Label, ButtonAdd } from \"./ContactForm.styled\";\nimport {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from \"../../Redux/contactsApi\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [addCon] = useAddContactMutation();\n  const { data: prevContacts } = useFetchContactsQuery();\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const inputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addContact = (e) => {\n    e.preventDefault();\n    const contactData = {\n      name,\n      number,\n    };\n    const findContacts = prevContacts.find((contact) => contact.name === name);\n    !findContacts\n      ? addCon(contactData)\n      : alert(`${name} is already in contact`);\n    reset();\n  };\n\n  return (\n    <Form onSubmit={addContact}>\n      <Label>\n        Name:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={inputChange}\n          value={name}\n          placeholder=\"New contact name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Tel:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"New contact number\"\n          onChange={inputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n    </Form>\n  );\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactItem = styled.li``;\r\n\r\nexport const ButtonDelete = styled.button`\r\n  background-color: #46ec8b;\r\n  border: 1px solid #46ec8b;\r\n  border-radius: 5px;\r\n  margin-left: 10px;\r\n  &:hover,\r\n  &:active {\r\n    background-color: #7171bd;\r\n    border: 1px solid black;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nexport const List = styled.ol``;\r\n","import { useSelector } from \"react-redux\";\nimport { ButtonDelete, ContactItem, List } from \"./ContactList.styled\";\nimport {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n} from \"../../Redux/contactsApi\";\nimport { getFilter } from \"../../Redux/selectors\";\n\nexport default function ContactList() {\n  const { data, isFetching, isError } = useFetchContactsQuery();\n  const [deleteContact] = useDeleteContactMutation();\n  const filter = useSelector(getFilter);\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return data.filter((item) =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <List>\n      {isError && <p>Упс, что то пошло не так</p>}\n      {isFetching && <p>Loading...</p>}\n      {data &&\n        !isFetching &&\n        visibleContacts().map((contact) => {\n          return (\n            <ContactItem key={contact.id}>\n              {contact.name} : {contact.number}\n              <ButtonDelete\n                type=\"submit\"\n                onClick={() => deleteContact(contact.id)}\n              >\n                Delete\n              </ButtonDelete>\n            </ContactItem>\n          );\n        })}\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const PhonebookSection = styled.div`\r\n  margin-left: 20px;\r\n`;\r\nexport const MainTitle = styled.h1`\r\n  text-transform: uppercase;\r\n  font-size: 24px;\r\n`;\r\nexport const Title = styled.h2`\r\n  text-transform: uppercase;\r\n  font-size: 18px;\r\n`;\r\n","import Filter from \"./Components/Filter/Filter\";\r\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\nimport { MainTitle, Title, PhonebookSection } from \"./App.styled\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <PhonebookSection>\r\n      <MainTitle>Phonebook</MainTitle>\r\n      <ContactForm />\r\n      <Title>Contacts</Title>\r\n      <Filter />\r\n      <ContactList />\r\n    </PhonebookSection>\r\n  );\r\n}\r\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { contactsApi } from \"./contactsApi\";\nimport filter from \"./filterSlice\";\n\nconst store = configureStore({\n  reducer: {\n    [contactsApi.reducerPath]: contactsApi.reducer,\n    filter,\n  },\n  middleware: (getDefaultMiddleware) => [\n    ...getDefaultMiddleware(),\n    contactsApi.middleware,\n  ],\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport store from \"./Redux/store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}