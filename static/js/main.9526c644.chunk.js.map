{"version":3,"sources":["Redux/action.js","Components/Filter/Filter.styled.jsx","Redux/selectors.js","Components/Filter/Filter.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.styled.jsx","Components/ContactList/ContactList.jsx","App.styled.jsx","App.jsx","Redux/contactsReducer.js","Redux/store.js","index.js"],"names":["deleteContact","createAction","addContact","filterChange","FilterInput","styled","input","Label","label","getContacts","state","items","contacts","getFilter","filter","getVisibleContacts","normalizedFilter","toLowerCase","item","name","includes","Filter","dispatch","useDispatch","useSelector","type","value","onChange","e","actions","target","placeholder","Form","form","Input","ButtonAdd","button","ContactForm","useState","setName","number","setNumber","inputChange","currentTarget","onSubmit","preventDefault","id","uuidv4","pattern","title","required","ContactItem","li","ButtonDelete","List","ol","ContactList","visibleContacts","map","contact","onClick","PhonebookSection","div","MainTitle","h1","Title","h2","App","useEffect","localStorage","setItem","JSON","stringify","createReducer","parse","getItem","payload","find","alert","_","combineReducers","store","configureStore","reducer","contactsReducer","middleware","logger","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9526c644.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const deleteContact = createAction(\"deleteContact\");\nexport const addContact = createAction(\"addContact\");\nexport const filterChange = createAction(\"filterChange\");\n","import styled from \"@emotion/styled\";\r\n\r\nexport const FilterInput = styled.input`\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  width: 300px;\r\n`;\r\n","export const getContacts = (state) => state.items.contacts;\n\nexport const getFilter = (state) => state.items.filter;\n\nexport const getVisibleContacts = (state) => {\n  const contacts = getContacts(state);\n  const filter = getFilter(state);\n  const normalizedFilter = filter.toLowerCase();\n  return contacts.filter((item) =>\n    item.name.toLowerCase().includes(normalizedFilter)\n  );\n};\n","import { useSelector, useDispatch } from \"react-redux\";\nimport * as actions from \"../../Redux/action\";\nimport { FilterInput, Label } from \"./Filter.styled\";\nimport { getFilter } from \"../../Redux/selectors\";\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n  const filterChange = (e) => dispatch(actions.filterChange(e.target.value));\n  return (\n    <Label>\n      Find contact by name\n      <FilterInput\n        type=\"text\"\n        value={filter}\n        onChange={filterChange}\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n      />\n    </Label>\n  );\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 300px;\r\n  height: auto;\r\n  border: 1px solid black;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  margin: 10px 20px;\r\n`;\r\n\r\nexport const ButtonAdd = styled.button`\r\n  margin-bottom: 10px;\r\n  width: 50%;\r\n  align-self: center;\r\n  background-color: #46ec8b;\r\n  border: 1px solid #46ec8b;\r\n  border-radius: 5px;\r\n  &:hover,\r\n  &:active {\r\n    background-color: #7171bd;\r\n    border: 1px solid black;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { Form, Input, Label, ButtonAdd } from \"./ContactForm.styled\";\nimport * as actions from \"../../Redux/action\";\n\nexport default function ContactForm() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const inputChange = (e) => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addContact = (e) => {\n    e.preventDefault();\n    let id = uuidv4();\n    const contactData = {\n      name,\n      id,\n      number,\n    };\n    dispatch(actions.addContact(contactData));\n    reset();\n  };\n\n  return (\n    <Form onSubmit={addContact}>\n      <Label>\n        Name:\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={inputChange}\n          value={name}\n          placeholder=\"New contact name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Tel:\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          placeholder=\"New contact number\"\n          onChange={inputChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </Label>\n      <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\n    </Form>\n  );\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ContactItem = styled.li``;\r\n\r\nexport const ButtonDelete = styled.button`\r\n  background-color: #46ec8b;\r\n  border: 1px solid #46ec8b;\r\n  border-radius: 5px;\r\n  margin-left: 10px;\r\n  &:hover,\r\n  &:active {\r\n    background-color: #7171bd;\r\n    border: 1px solid black;\r\n    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nexport const List = styled.ol``;\r\n","import { useSelector, useDispatch } from \"react-redux\";\nimport { ButtonDelete, ContactItem, List } from \"./ContactList.styled\";\nimport * as actions from \"../../Redux/action\";\nimport { getVisibleContacts } from \"../../Redux/selectors\";\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  return (\n    <List>\n      {visibleContacts.map((contact) => {\n        return (\n          <ContactItem key={contact.id}>\n            {contact.name} : {contact.number}\n            <ButtonDelete\n              type=\"submit\"\n              onClick={() => {\n                dispatch(actions.deleteContact(contact));\n              }}\n            >\n              Delete\n            </ButtonDelete>\n          </ContactItem>\n        );\n      })}\n    </List>\n  );\n}\n","import styled from \"@emotion/styled\";\r\n\r\nexport const PhonebookSection = styled.div`\r\n  margin-left: 20px;\r\n`;\r\nexport const MainTitle = styled.h1`\r\n  text-transform: uppercase;\r\n  font-size: 24px;\r\n`;\r\nexport const Title = styled.h2`\r\n  text-transform: uppercase;\r\n  font-size: 18px;\r\n`;\r\n","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Filter from \"./Components/Filter/Filter\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport { MainTitle, Title, PhonebookSection } from \"./App.styled\";\nimport { getContacts } from \"./Redux/selectors\";\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n\n  useEffect(() => {\n    localStorage.setItem(\"contacts\", JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <PhonebookSection>\n      <MainTitle>Phonebook</MainTitle>\n      <ContactForm />\n      <Title>Contacts</Title>\n      <Filter />\n      <ContactList />\n    </PhonebookSection>\n  );\n}\n","import * as actions from \"./action\";\nimport { createReducer, combineReducers } from \"@reduxjs/toolkit\";\n\nconst contacts = createReducer(\n  JSON.parse(localStorage.getItem(\"contacts\")) ?? [],\n  {\n    [actions.deleteContact]: (state, { payload }) =>\n      state.filter((contact) => contact.id !== payload.id),\n\n    [actions.addContact]: (state, { payload }) => {\n      const findContact = state.find((contact) => {\n        return contact.name === payload.name;\n      });\n      return !findContact\n        ? [payload, ...state]\n        : alert(`${payload.name} is already in contact`);\n    },\n  }\n);\n\nconst filter = createReducer(\"\", {\n  [actions.filterChange]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  contacts,\n  filter,\n});\n","import logger from \"redux-logger\";\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contactsReducer\";\n\nconst store = configureStore({\n  reducer: {\n    items: contactsReducer,\n  },\n  middleware: [logger],\n  devTools: process.env.NODE_ENV !== \"production\",\n});\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport store from \"./Redux/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}